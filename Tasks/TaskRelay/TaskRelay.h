#pragma once

#include <stdbool.h>

#include "../../multitasklib.h"
#include "../../generalpurposelib.h"

#include "Mode/Mode.h"


#define RESET_WAIT_AFTER_SHUTDOWN (5*SECOND_MILLIS)
#define TASK_RELAY_WAIT (1*SECOND_MILLIS/2)

#define PUBSUB_MESSAGE_ON "on"
#define PUBSUB_MESSAGE_OF "of"

#define MQTT_TOPIC_NAME_STATUS_MANU "prototype/switch/status-manu"
#define MQTT_TOPIC_NAME_STATUS_AUTO "prototype/switch/status-auto"
#define MQTT_TOPIC_NAME_MODE "prototype/switch/mode"

typedef struct
{
	/**
	expresses the open or closed state of the relay
	*/
	bool relayState=false;
	/**
	operation mode
	*/
	Mode mode=MANU_REMOT; // initialize with the safest
	const int pinRelay = 32;
	const int pinButtonLocalBypass= 35;
	const int pinButtonLocalState = 34;
	
	DelayData resetTimer;
	bool resetting=false;
	//bool resetting=false;
	//auto timer;
	DelayData timer;

} RelaisTaskData;

RelaisTaskData relaisRuntime;

#include "TaskRelay-autogenerated.h"
